language: go
sudo: true
matrix:
  include:
    - go: 1.x
      env: LATEST=true
    - go: 1.9

before_install:
  - sudo apt update

install:
  - go get github.com/mattn/go-isatty # needed for progress bar in windows
  - go get github.com/inconshreveable/mousetrap # needed for windows builds
  - go get github.com/shurcooL/vfsgen # needed for go generate
  - go get github.com/sirupsen/logrus # used in main.go and cmd/serve/root.go
  - go get github.com/konsorten/go-windows-terminal-sequences # needed by github.com/sirupsen/logrus (see above)
  - go get github.com/mattn/go-isatty # needed for mingw/windows builds
  - sudo apt install libc6-dev-i386
  - sudo apt install gcc-mingw-w64

script:
  - go generate
  - go get -t -v ./...
  - go vet $(go list ./... | grep -v /vendor/)
  - go test -v -race ./...
  # only build binaries from the latest Go release.
  - if [ "${LATEST}" = "true" ]; then env CGO_ENABLED=1 GOARCH=386 go build -v -o shiori_linux_386; fi
  - if [ "${LATEST}" = "true" ]; then env CGO_ENABLED=1 GOARCH=amd64 go build -v -o shiori_linux_amd64; fi
  - if [ "${LATEST}" = "true" ]; then env CGO_ENABLED=1 GOOS=windows GOARCH=386 CC=i686-w64-mingw32-gcc go build -v -o shiori_windows_386.exe; fi
  - if [ "${LATEST}" = "true" ]; then env CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC=x86_64-w64-mingw32-gcc go build -v -o shiori_windows_amd64.exe; fi

deploy:
  provider: releases
  skip_cleanup: true
  api_key:
    secure: $TOKEN
  file:
  - shiori_linux_386
  - shiori_linux_amd64
  - shiori_windows_386.exe
  - shiori_windows_amd64.exe
  on:
    tags: true
    branches:
      only:
        - master
    condition: $LATEST = true
